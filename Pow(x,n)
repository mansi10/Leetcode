class Solution {
    public double myPow(double x, int n) {
        long N = n;
        if (N < 0) {
            x = 1 / x;
            N = -N;
        }
        double ans = 1;
        for (long i = 0; i < N; i++)
            ans = ans * x;
        return ans;
    }
};

----------------------------------------------------

class Solution {
    public double myPow(double x, int n) {
        double ans=1;
        long nn=n;
        if(nn<0){
            x=1/x;
            nn=-nn;
        }
        
        double current_product=x;
        while(nn > 0){
            if(nn%2 ==1){
                ans=ans*x;
                nn=nn-1;
            }
            else{
                x=x*x;
                nn=nn/2;
            }
        }
        return ans;
    }
}


====================================

class Solution {
    public double myPow(double x, int n) {

        if(x == 0){
            return 0;
        }

        if(n == 1){
            return 1;
        }

        double res =1;

        for(int i=0; i < Math.abs(n); i++){
            res = res*x;
        }

        return n >= 0 ? res : 1/res;
    }
}


=======================================

class Solution {
    public double myPow(double x, int n) {

        if (x == 0) return 0;
        if (n == 0) return 1;

        double res = 1;
        long power = Math.abs((long)n);

        while(power > 0){
            if(power%2 == 1){
                res = res *x;
                power = power-1;
            }else{
                x= x*x;
                power= power/2;
            }
        }
        return n >= 0 ? res : 1/res;
    }
}
