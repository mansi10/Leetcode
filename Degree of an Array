class Solution {
    public int findShortestSubArray(int[] nums) {
        int n = nums.length;
        int len = n;
        Map<Integer, Integer> freqMap = new HashMap<>();
        Map<Integer, Integer> startMap = new HashMap<>();
        Map<Integer, Integer> lastMap = new HashMap<>();
        int degree = 0;

        for(int i=0; i < n; i++){
            freqMap.put(nums[i], freqMap.getOrDefault(nums[i], 0) + 1);
            if(!startMap.containsKey(nums[i])){
                startMap.put(nums[i], i);
            }
            lastMap.put(nums[i], i);
            degree = Math.max(degree, freqMap.get(nums[i]));
        }

        for(int k : freqMap.keySet()){
            if(freqMap.get(k) == degree){
                len = Math.min(len, lastMap.get(k) - startMap.get(k)+1);
            }
        }

        return len;
    }
}
