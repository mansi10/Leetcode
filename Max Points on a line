class Solution {
    public int maxPoints(int[][] points) {
        int len = points.length;

        if(len==1){
            return 1;
        }

        int max=0;
        for(int i=0; i < len; i++){
            Map<Double, Integer> map = new HashMap<>();
            for(int j =i+1; j < len; j++){
                double slope = calcSlope(points[i], points[j]);
                map.put(slope, map.getOrDefault(slope,0)+1);
                max = Math.max(max, map.get(slope));
            }
        }
        return max+1;
    }
    
    private double calcSlope(int[] p1, int[] p2){
        if(p2[1] == p1[1]){
            return 0;
        }

        if(p2[0] == p1[0]){
            return Double.MAX_VALUE;
        }
        return (double) (p2[1] - p1[1]) / (p2[0] - p1[0]);
    }
}
