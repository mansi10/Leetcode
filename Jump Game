SC-o(1)


class Solution {
    public boolean canJump(int[] nums) {
        int lastIndex=nums.length-1;
        
        for(int i= lastIndex; i>=0; i--){
            if(i + nums[i] >= lastIndex){
                lastIndex= i;
            }
        }
        return lastIndex ==0;
    }
}

----------------------------

class Solution {
    public boolean canJump(int[] nums) {
        int iMaxReach = 0 + nums[0];
        int i=1;
        
        if(nums.length == 1){
            return true;
        }
        
        while(iMaxReach >= i){
            if(iMaxReach >= nums.length -1){
                return true;
            }
            iMaxReach = Math.max(iMaxReach, i + nums[i]);
            i++;
        }
        return false;
    }
}
=============================

class Solution {
    public boolean canJump(int[] nums) {
        int length = nums.length;
        int maxReachableIndex = 0;

        for(int i=0; i < length; i++){
            if(i > maxReachableIndex){
                return false;
            }
            maxReachableIndex= Math.max(maxReachableIndex, i + nums[i]);
        }
        return true;
    }
}

