public class Solution {
    public int findPeakElement(int[] nums) {
        for (int i = 0; i < nums.length - 1; i++) {
            if (nums[i] > nums[i + 1])
                return i;
        }
        return nums.length - 1;
    }
}


---------------------------------------------------

class Solution {
    public int findPeakElement(int[] nums) {
        return search(nums, 0, nums.length-1);
    }
    
    public int search(int[] nums, int l, int r){
        if(l == r)
        return l;
        int mid= (l + r)/2;
        if(nums[mid] > nums[mid+1])
            return search(nums, l, mid);
        return search(nums, mid+1, r);
    }
    
}

===========================

class Solution {
    public int findPeakElement(int[] nums) {
        int left=0;
        int right= nums.length-1;

        while(left <= right){
            int mid = left+ (right - left)/2;

            // left neighbor
            if(mid > 0 && nums[mid] < nums[mid-1]){
                right = mid-1;
            }else if(mid < nums.length-1 && nums[mid] < nums[mid+1]){
                left = mid+1;
            }else{
                return mid;
            }
        }
        return -1;
    }
}

